{"abi":[{"type":"error","name":"InvalidSignature","inputs":[]}],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f318bcccc40ddb57dfa9901bd1734f2a9e5c6405f1b632e19773db97fc9c4d164736f6c63430008190033","sourceMap":"1453:16549:200:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1453:16549:200;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f318bcccc40ddb57dfa9901bd1734f2a9e5c6405f1b632e19773db97fc9c4d164736f6c63430008190033","sourceMap":"1453:16549:200:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/ECDSA.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ECDSA.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol)\",\"details\":\"Note: - The recovery functions use the ecrecover precompile (0x1). - As of Solady version 0.0.68, the `recover` variants will revert upon recovery failure.   This is for more safety by default.   Use the `tryRecover` variants if you need to get the zero address back   upon recovery failure instead. - As of Solady version 0.0.134, all `bytes signature` variants accept both   regular 65-byte `(r, s, v)` and EIP-2098 `(r, vs)` short form signatures.   See: https://eips.ethereum.org/EIPS/eip-2098   This is for calldata efficiency on smart accounts prevalent on L2s. WARNING! Do NOT use signatures as unique identifiers: - Use a nonce in the digest to prevent replay attacks on the same contract. - Use EIP-712 for the digest to prevent replay attacks across different chains and contracts.   EIP-712 also enables readable signing of typed data for better user safety. This implementation does NOT check if a signature is non-malleable.\",\"errors\":{\"InvalidSignature()\":[{\"details\":\"The signature is invalid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Gas optimized ECDSA wrapper.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/solady/src/utils/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":checknsignatures/=node_modules/checknsignatures/src/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":sentinellist/=node_modules/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidSignature"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@safe-global/=node_modules/@safe-global/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","checknsignatures/=node_modules/checknsignatures/src/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/erc4337-validation/src/","erc7579/=node_modules/erc7579/src/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","sentinellist/=node_modules/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/","solmate/=node_modules/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/solady/src/utils/ECDSA.sol":"ECDSA"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/solady/src/utils/ECDSA.sol":{"keccak256":"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4","urls":["bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc","dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY"],"license":"MIT"}},"version":1},"id":200}