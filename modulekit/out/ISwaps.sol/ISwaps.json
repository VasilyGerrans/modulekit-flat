{"abi":[{"type":"function","name":"exchange","inputs":[{"name":"_pool","type":"address","internalType":"address"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_expected","type":"uint256","internalType":"uint256"},{"name":"_receiver","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"exchange_multiple","inputs":[{"name":"_route","type":"address[9]","internalType":"address[9]"},{"name":"_swap_params","type":"uint256[3][4]","internalType":"uint256[3][4]"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_expected","type":"uint256","internalType":"uint256"},{"name":"_pools","type":"address[4]","internalType":"address[4]"},{"name":"_receiver","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"exchange_multiple","inputs":[{"name":"_route","type":"address[9]","internalType":"address[9]"},{"name":"_swap_params","type":"uint256[3][4]","internalType":"uint256[3][4]"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_expected","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"exchange_with_best_rate","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_expected","type":"uint256","internalType":"uint256"},{"name":"_receiver","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"get_best_rate","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_exclude_pools","type":"address[8]","internalType":"address[8]"}],"outputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"get_calculator","inputs":[{"name":"_pool","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"get_exchange_amount","inputs":[{"name":"_pool","type":"address","internalType":"address"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"get_exchange_amounts","inputs":[{"name":"_pool","type":"address","internalType":"address"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"get_exchange_multiple_amount","inputs":[{"name":"_route","type":"address[9]","internalType":"address[9]"},{"name":"_swap_params","type":"uint256[3][4]","internalType":"uint256[3][4]"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"get_input_amount","inputs":[{"name":"_pool","type":"address","internalType":"address"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"exchange(address,address,address,uint256,uint256,address)":"1a4c1ca3","exchange_multiple(address[9],uint256[3][4],uint256,uint256)":"353ca424","exchange_multiple(address[9],uint256[3][4],uint256,uint256,address[4],address)":"0651cb35","exchange_with_best_rate(address,address,uint256,uint256,address)":"9f69a6a6","get_best_rate(address,address,uint256,address[8])":"488de9af","get_calculator(address)":"5d7dc825","get_exchange_amount(address,address,address,uint256)":"3973e834","get_exchange_amounts(address,address,address,uint256[])":"3bc9e99c","get_exchange_multiple_amount(address[9],uint256[3][4],uint256)":"7b3d22cf","get_input_amount(address,address,address,uint256)":"7fa5a654"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[9]\",\"name\":\"_route\",\"type\":\"address[9]\"},{\"internalType\":\"uint256[3][4]\",\"name\":\"_swap_params\",\"type\":\"uint256[3][4]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"},{\"internalType\":\"address[4]\",\"name\":\"_pools\",\"type\":\"address[4]\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"exchange_multiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[9]\",\"name\":\"_route\",\"type\":\"address[9]\"},{\"internalType\":\"uint256[3][4]\",\"name\":\"_swap_params\",\"type\":\"uint256[3][4]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"}],\"name\":\"exchange_multiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expected\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"exchange_with_best_rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address[8]\",\"name\":\"_exclude_pools\",\"type\":\"address[8]\"}],\"name\":\"get_best_rate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"get_calculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"get_exchange_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"get_exchange_amounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[9]\",\"name\":\"_route\",\"type\":\"address[9]\"},{\"internalType\":\"uint256[3][4]\",\"name\":\"_swap_params\",\"type\":\"uint256[3][4]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"get_exchange_multiple_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"get_input_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exchange(address,address,address,uint256,uint256,address)\":{\"details\":\"Prior to calling this function, the caller must approve        this contract to transfer `_amount` coins from `_from`        Works for both regular and factory-deployed pools\",\"params\":{\"_amount\":\"Quantity of `_from` being sent\",\"_expected\":\"Minimum quantity of `_from` received        in order for the transaction to succeed\",\"_from\":\"Address of coin being sent\",\"_pool\":\"Address of the pool to use for the swap\",\"_receiver\":\"Address to transfer the received tokens to\",\"_to\":\"Address of coin being received\"},\"returns\":{\"_0\":\"uint256 Amount received\"}},\"exchange_multiple(address[9],uint256[3][4],uint256,uint256,address[4],address)\":{\"details\":\"Routing and swap params must be determined off-chain. This     functionality is designed for gas efficiency over ease-of-use.\",\"params\":{\"_amount\":\"The amount of `_route[0]` token being sent.\",\"_expected\":\"The minimum amount received after the final swap.\",\"_pools\":\"Array of pools for swaps via zap contracts. This parameter is only needed for     Polygon meta-factories underlying swaps.\",\"_receiver\":\"Address to transfer the final output token to.\",\"_route\":\"Array of [initial token, pool, token, pool, token, ...]     The array is iterated until a pool address of 0x00, then the last     given token is transferred to `_receiver`\",\"_swap_params\":\"Multidimensional array of [i, j, swap type] where i and j are the correct     values for the n'th pool in `_route`. The swap type should be 1 for     a stableswap `exchange`, 2 for stableswap `exchange_underlying`, 3     for a cryptoswap `exchange`, 4 for a cryptoswap `exchange_underlying`,     5 for Polygon factory metapools `exchange_underlying`, 6-8 for     underlying coin -> LP token \\\"exchange\\\" (actually `add_liquidity`), 9 and 10     for LP token -> underlying coin \\\"exchange\\\" (actually `remove_liquidity_one_coin`)\"},\"returns\":{\"_0\":\"Received amount of the final output token\"}},\"exchange_with_best_rate(address,address,uint256,uint256,address)\":{\"details\":\"Prior to calling this function, the caller must approve        this contract to transfer `_amount` coins from `_from`        Does NOT check rates in factory-deployed pools\",\"params\":{\"_amount\":\"Quantity of `_from` being sent\",\"_expected\":\"Minimum quantity of `_from` received        in order for the transaction to succeed\",\"_from\":\"Address of coin being sent\",\"_receiver\":\"Address to transfer the received tokens to\",\"_to\":\"Address of coin being received\"},\"returns\":{\"_0\":\"uint256 Amount received\"}},\"get_best_rate(address,address,uint256,address[8])\":{\"details\":\"Checks rates for regular and factory pools\",\"params\":{\"_amount\":\"Quantity of `_from` being sent\",\"_exclude_pools\":\"A list of up to 8 addresses which shouldn't be returned\",\"_from\":\"Address of coin being sent\",\"_to\":\"Address of coin being received\"},\"returns\":{\"_0\":\"Pool address, amount received\"}},\"get_calculator(address)\":{\"details\":\"Used to calculate `get_dy` for a pool\",\"params\":{\"_pool\":\"Pool address\"},\"returns\":{\"_0\":\"`CurveCalc` address\"}},\"get_exchange_amount(address,address,address,uint256)\":{\"details\":\"Works for both regular and factory-deployed pools\",\"params\":{\"_amount\":\"Quantity of `_from` to be sent\",\"_from\":\"Address of coin to be sent\",\"_pool\":\"Pool address\",\"_to\":\"Address of coin to be received\"},\"returns\":{\"_0\":\"Quantity of `_to` to be received\"}},\"get_exchange_amounts(address,address,address,uint256[])\":{\"params\":{\"_amounts\":\"Quantity of `_to` to be received\",\"_from\":\"Address of coin to be sent\",\"_pool\":\"Pool address\",\"_to\":\"Address of coin to be received\"},\"returns\":{\"_0\":\"Quantity of `_from` to be sent\"}},\"get_input_amount(address,address,address,uint256)\":{\"params\":{\"_amount\":\"Quantity of `_to` to be received\",\"_from\":\"Address of coin to be sent\",\"_pool\":\"Pool address\",\"_to\":\"Address of coin to be received\"},\"returns\":{\"_0\":\"Quantity of `_from` to be sent\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exchange(address,address,address,uint256,uint256,address)\":{\"notice\":\"Perform an exchange using a specific pool\"},\"exchange_multiple(address[9],uint256[3][4],uint256,uint256,address[4],address)\":{\"notice\":\"Perform up to four swaps in a single transaction\"},\"exchange_with_best_rate(address,address,uint256,uint256,address)\":{\"notice\":\"Perform an exchange using the pool that offers the best rate\"},\"get_best_rate(address,address,uint256,address[8])\":{\"notice\":\"Find the pool offering the best rate for a given swap.\"},\"get_calculator(address)\":{\"notice\":\"Set calculator contract\"},\"get_exchange_amount(address,address,address,uint256)\":{\"notice\":\"Get the current number of coins received in an exchange\"},\"get_exchange_amounts(address,address,address,uint256[])\":{\"notice\":\"Get the current number of coins required to receive the given amount in an exchange\"},\"get_input_amount(address,address,address,uint256)\":{\"notice\":\"Get the current number of coins required to receive the given amount in an exchange\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"modulekit/src/integrations/interfaces/curve/ISwaps.sol\":\"ISwaps\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":sentinellist/=node_modules/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"modulekit/src/integrations/interfaces/curve/ISwaps.sol\":{\"keccak256\":\"0xd317f75ab413e0581b808c6ce8122d825bd0f446a3d2d546cebe0c52de6a3098\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7d857bc6877cf75ef67cc6ea7fca559ec85b62d447abdc8ab1d84a0a336f555\",\"dweb:/ipfs/QmPrWVHDNybD1uzDnDiUju4w85CT1dE98VceG63ttDw5jd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_expected","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"stateMutability":"payable","type":"function","name":"exchange","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[9]","name":"_route","type":"address[9]"},{"internalType":"uint256[3][4]","name":"_swap_params","type":"uint256[3][4]"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_expected","type":"uint256"},{"internalType":"address[4]","name":"_pools","type":"address[4]"},{"internalType":"address","name":"_receiver","type":"address"}],"stateMutability":"payable","type":"function","name":"exchange_multiple","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[9]","name":"_route","type":"address[9]"},{"internalType":"uint256[3][4]","name":"_swap_params","type":"uint256[3][4]"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_expected","type":"uint256"}],"stateMutability":"payable","type":"function","name":"exchange_multiple","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_expected","type":"uint256"},{"internalType":"address","name":"_receiver","type":"address"}],"stateMutability":"payable","type":"function","name":"exchange_with_best_rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address[8]","name":"_exclude_pools","type":"address[8]"}],"stateMutability":"view","type":"function","name":"get_best_rate","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"stateMutability":"view","type":"function","name":"get_calculator","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"get_exchange_amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256[]","name":"_amounts","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"get_exchange_amounts","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address[9]","name":"_route","type":"address[9]"},{"internalType":"uint256[3][4]","name":"_swap_params","type":"uint256[3][4]"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"get_exchange_multiple_amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"get_input_amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"exchange(address,address,address,uint256,uint256,address)":{"details":"Prior to calling this function, the caller must approve        this contract to transfer `_amount` coins from `_from`        Works for both regular and factory-deployed pools","params":{"_amount":"Quantity of `_from` being sent","_expected":"Minimum quantity of `_from` received        in order for the transaction to succeed","_from":"Address of coin being sent","_pool":"Address of the pool to use for the swap","_receiver":"Address to transfer the received tokens to","_to":"Address of coin being received"},"returns":{"_0":"uint256 Amount received"}},"exchange_multiple(address[9],uint256[3][4],uint256,uint256,address[4],address)":{"details":"Routing and swap params must be determined off-chain. This     functionality is designed for gas efficiency over ease-of-use.","params":{"_amount":"The amount of `_route[0]` token being sent.","_expected":"The minimum amount received after the final swap.","_pools":"Array of pools for swaps via zap contracts. This parameter is only needed for     Polygon meta-factories underlying swaps.","_receiver":"Address to transfer the final output token to.","_route":"Array of [initial token, pool, token, pool, token, ...]     The array is iterated until a pool address of 0x00, then the last     given token is transferred to `_receiver`","_swap_params":"Multidimensional array of [i, j, swap type] where i and j are the correct     values for the n'th pool in `_route`. The swap type should be 1 for     a stableswap `exchange`, 2 for stableswap `exchange_underlying`, 3     for a cryptoswap `exchange`, 4 for a cryptoswap `exchange_underlying`,     5 for Polygon factory metapools `exchange_underlying`, 6-8 for     underlying coin -> LP token \"exchange\" (actually `add_liquidity`), 9 and 10     for LP token -> underlying coin \"exchange\" (actually `remove_liquidity_one_coin`)"},"returns":{"_0":"Received amount of the final output token"}},"exchange_with_best_rate(address,address,uint256,uint256,address)":{"details":"Prior to calling this function, the caller must approve        this contract to transfer `_amount` coins from `_from`        Does NOT check rates in factory-deployed pools","params":{"_amount":"Quantity of `_from` being sent","_expected":"Minimum quantity of `_from` received        in order for the transaction to succeed","_from":"Address of coin being sent","_receiver":"Address to transfer the received tokens to","_to":"Address of coin being received"},"returns":{"_0":"uint256 Amount received"}},"get_best_rate(address,address,uint256,address[8])":{"details":"Checks rates for regular and factory pools","params":{"_amount":"Quantity of `_from` being sent","_exclude_pools":"A list of up to 8 addresses which shouldn't be returned","_from":"Address of coin being sent","_to":"Address of coin being received"},"returns":{"_0":"Pool address, amount received"}},"get_calculator(address)":{"details":"Used to calculate `get_dy` for a pool","params":{"_pool":"Pool address"},"returns":{"_0":"`CurveCalc` address"}},"get_exchange_amount(address,address,address,uint256)":{"details":"Works for both regular and factory-deployed pools","params":{"_amount":"Quantity of `_from` to be sent","_from":"Address of coin to be sent","_pool":"Pool address","_to":"Address of coin to be received"},"returns":{"_0":"Quantity of `_to` to be received"}},"get_exchange_amounts(address,address,address,uint256[])":{"params":{"_amounts":"Quantity of `_to` to be received","_from":"Address of coin to be sent","_pool":"Pool address","_to":"Address of coin to be received"},"returns":{"_0":"Quantity of `_from` to be sent"}},"get_input_amount(address,address,address,uint256)":{"params":{"_amount":"Quantity of `_to` to be received","_from":"Address of coin to be sent","_pool":"Pool address","_to":"Address of coin to be received"},"returns":{"_0":"Quantity of `_from` to be sent"}}},"version":1},"userdoc":{"kind":"user","methods":{"exchange(address,address,address,uint256,uint256,address)":{"notice":"Perform an exchange using a specific pool"},"exchange_multiple(address[9],uint256[3][4],uint256,uint256,address[4],address)":{"notice":"Perform up to four swaps in a single transaction"},"exchange_with_best_rate(address,address,uint256,uint256,address)":{"notice":"Perform an exchange using the pool that offers the best rate"},"get_best_rate(address,address,uint256,address[8])":{"notice":"Find the pool offering the best rate for a given swap."},"get_calculator(address)":{"notice":"Set calculator contract"},"get_exchange_amount(address,address,address,uint256)":{"notice":"Get the current number of coins received in an exchange"},"get_exchange_amounts(address,address,address,uint256[])":{"notice":"Get the current number of coins required to receive the given amount in an exchange"},"get_input_amount(address,address,address,uint256)":{"notice":"Get the current number of coins required to receive the given amount in an exchange"}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@safe-global/=node_modules/@safe-global/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/erc4337-validation/src/","erc7579/=node_modules/erc7579/src/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","sentinellist/=node_modules/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"modulekit/src/integrations/interfaces/curve/ISwaps.sol":"ISwaps"},"evmVersion":"paris","libraries":{}},"sources":{"modulekit/src/integrations/interfaces/curve/ISwaps.sol":{"keccak256":"0xd317f75ab413e0581b808c6ce8122d825bd0f446a3d2d546cebe0c52de6a3098","urls":["bzz-raw://e7d857bc6877cf75ef67cc6ea7fca559ec85b62d447abdc8ab1d84a0a336f555","dweb:/ipfs/QmPrWVHDNybD1uzDnDiUju4w85CT1dE98VceG63ttDw5jd"],"license":"MIT"}},"version":1},"id":87}