{"abi":[{"type":"function","name":"attest","inputs":[{"name":"attestation","type":"tuple","internalType":"struct AttestationRecord","components":[{"name":"schemaUID","type":"bytes32","internalType":"bytes32"},{"name":"subject","type":"address","internalType":"address"},{"name":"attester","type":"address","internalType":"address"},{"name":"time","type":"uint48","internalType":"uint48"},{"name":"expirationTime","type":"uint48","internalType":"uint48"},{"name":"revocationTime","type":"uint48","internalType":"uint48"},{"name":"dataPointer","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"isPayable","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"moduleRegistration","inputs":[{"name":"module","type":"tuple","internalType":"struct ModuleRecord","components":[{"name":"resolverUID","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"address","internalType":"address"},{"name":"metadata","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"multiAttest","inputs":[{"name":"attestations","type":"tuple[]","internalType":"struct AttestationRecord[]","components":[{"name":"schemaUID","type":"bytes32","internalType":"bytes32"},{"name":"subject","type":"address","internalType":"address"},{"name":"attester","type":"address","internalType":"address"},{"name":"time","type":"uint48","internalType":"uint48"},{"name":"expirationTime","type":"uint48","internalType":"uint48"},{"name":"revocationTime","type":"uint48","internalType":"uint48"},{"name":"dataPointer","type":"address","internalType":"address"}]},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"multiRevoke","inputs":[{"name":"attestations","type":"tuple[]","internalType":"struct AttestationRecord[]","components":[{"name":"schemaUID","type":"bytes32","internalType":"bytes32"},{"name":"subject","type":"address","internalType":"address"},{"name":"attester","type":"address","internalType":"address"},{"name":"time","type":"uint48","internalType":"uint48"},{"name":"expirationTime","type":"uint48","internalType":"uint48"},{"name":"revocationTime","type":"uint48","internalType":"uint48"},{"name":"dataPointer","type":"address","internalType":"address"}]},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"revoke","inputs":[{"name":"attestation","type":"tuple","internalType":"struct AttestationRecord","components":[{"name":"schemaUID","type":"bytes32","internalType":"bytes32"},{"name":"subject","type":"address","internalType":"address"},{"name":"attester","type":"address","internalType":"address"},{"name":"time","type":"uint48","internalType":"uint48"},{"name":"expirationTime","type":"uint48","internalType":"uint48"},{"name":"revocationTime","type":"uint48","internalType":"uint48"},{"name":"dataPointer","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"payable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceID","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"attest((bytes32,address,address,uint48,uint48,uint48,address))":"b8015b09","isPayable()":"ce46e046","moduleRegistration((bytes32,address,bytes))":"ed1ed5c4","multiAttest((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])":"6d4f5549","multiRevoke((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])":"5af807df","revoke((bytes32,address,address,uint48,uint48,uint48,address))":"4b15adea","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"dataPointer\",\"type\":\"address\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleRecord\",\"name\":\"module\",\"type\":\"tuple\"}],\"name\":\"moduleRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"dataPointer\",\"type\":\"address\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"dataPointer\",\"type\":\"address\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"dataPointer\",\"type\":\"address\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,address,address,uint48,uint48,uint48,address))\":{\"details\":\"Processes an attestation and verifies whether it's valid.\",\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"details\":\"Returns whether the resolver supports ETH transfers.\"},\"moduleRegistration((bytes32,address,bytes))\":{\"details\":\"Processes a Module Registration\",\"params\":{\"module\":\"Module registration artefact\"},\"returns\":{\"_0\":\"Whether the registration is valid\"}},\"multiAttest((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])\":{\"details\":\"Processes multiple attestations and verifies whether they are valid.\",\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])\":{\"details\":\"Processes revocation of multiple attestation and verifies they can be revoked.\",\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,address,address,uint48,uint48,uint48,address))\":{\"details\":\"Processes an attestation revocation and verifies if it can be revoked.\",\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"modulekit/src/deployment/RegistryDeployer.sol\":\"IResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":sentinellist/=node_modules/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"modulekit/src/deployment/RegistryDeployer.sol\":{\"keccak256\":\"0x64c183fdd81f7cfb1380b7ffc6fe2ab695cecb4acaf36a98432bd8dfc23de362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4a61f24d642f15ce5b8509c782b085f4492f544a2bfead7016c04b6a84e5247\",\"dweb:/ipfs/QmUMr9CKkJbrERYuiijGZX9wTEEn6vVcbiPvwkgLTwSgXj\"]},\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct AttestationRecord","name":"attestation","type":"tuple","components":[{"internalType":"bytes32","name":"schemaUID","type":"bytes32"},{"internalType":"address","name":"subject","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint48","name":"time","type":"uint48"},{"internalType":"uint48","name":"expirationTime","type":"uint48"},{"internalType":"uint48","name":"revocationTime","type":"uint48"},{"internalType":"address","name":"dataPointer","type":"address"}]}],"stateMutability":"payable","type":"function","name":"attest","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"isPayable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct ModuleRecord","name":"module","type":"tuple","components":[{"internalType":"bytes32","name":"resolverUID","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"metadata","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"moduleRegistration","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct AttestationRecord[]","name":"attestations","type":"tuple[]","components":[{"internalType":"bytes32","name":"schemaUID","type":"bytes32"},{"internalType":"address","name":"subject","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint48","name":"time","type":"uint48"},{"internalType":"uint48","name":"expirationTime","type":"uint48"},{"internalType":"uint48","name":"revocationTime","type":"uint48"},{"internalType":"address","name":"dataPointer","type":"address"}]},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"payable","type":"function","name":"multiAttest","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct AttestationRecord[]","name":"attestations","type":"tuple[]","components":[{"internalType":"bytes32","name":"schemaUID","type":"bytes32"},{"internalType":"address","name":"subject","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint48","name":"time","type":"uint48"},{"internalType":"uint48","name":"expirationTime","type":"uint48"},{"internalType":"uint48","name":"revocationTime","type":"uint48"},{"internalType":"address","name":"dataPointer","type":"address"}]},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"payable","type":"function","name":"multiRevoke","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct AttestationRecord","name":"attestation","type":"tuple","components":[{"internalType":"bytes32","name":"schemaUID","type":"bytes32"},{"internalType":"address","name":"subject","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint48","name":"time","type":"uint48"},{"internalType":"uint48","name":"expirationTime","type":"uint48"},{"internalType":"uint48","name":"revocationTime","type":"uint48"},{"internalType":"address","name":"dataPointer","type":"address"}]}],"stateMutability":"payable","type":"function","name":"revoke","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"attest((bytes32,address,address,uint48,uint48,uint48,address))":{"details":"Processes an attestation and verifies whether it's valid.","params":{"attestation":"The new attestation."},"returns":{"_0":"Whether the attestation is valid."}},"isPayable()":{"details":"Returns whether the resolver supports ETH transfers."},"moduleRegistration((bytes32,address,bytes))":{"details":"Processes a Module Registration","params":{"module":"Module registration artefact"},"returns":{"_0":"Whether the registration is valid"}},"multiAttest((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])":{"details":"Processes multiple attestations and verifies whether they are valid.","params":{"attestations":"The new attestations.","values":"Explicit ETH amounts which were sent with each attestation."},"returns":{"_0":"Whether all the attestations are valid."}},"multiRevoke((bytes32,address,address,uint48,uint48,uint48,address)[],uint256[])":{"details":"Processes revocation of multiple attestation and verifies they can be revoked.","params":{"attestations":"The existing attestations to be revoked.","values":"Explicit ETH amounts which were sent with each revocation."},"returns":{"_0":"Whether the attestations can be revoked."}},"revoke((bytes32,address,address,uint48,uint48,uint48,address))":{"details":"Processes an attestation revocation and verifies if it can be revoked.","params":{"attestation":"The existing attestation to be revoked."},"returns":{"_0":"Whether the attestation can be revoked."}},"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.","params":{"interfaceID":"The interface identifier, as specified in ERC-165"},"returns":{"_0":"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@safe-global/=node_modules/@safe-global/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/erc4337-validation/src/","erc7579/=node_modules/erc7579/src/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","sentinellist/=node_modules/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"modulekit/src/deployment/RegistryDeployer.sol":"IResolver"},"evmVersion":"paris","libraries":{}},"sources":{"modulekit/src/deployment/RegistryDeployer.sol":{"keccak256":"0x64c183fdd81f7cfb1380b7ffc6fe2ab695cecb4acaf36a98432bd8dfc23de362","urls":["bzz-raw://c4a61f24d642f15ce5b8509c782b085f4492f544a2bfead7016c04b6a84e5247","dweb:/ipfs/QmUMr9CKkJbrERYuiijGZX9wTEEn6vVcbiPvwkgLTwSgXj"],"license":"MIT"},"node_modules/forge-std/src/interfaces/IERC165.sol":{"keccak256":"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600","urls":["bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc","dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"],"license":"MIT"}},"version":1},"id":14}